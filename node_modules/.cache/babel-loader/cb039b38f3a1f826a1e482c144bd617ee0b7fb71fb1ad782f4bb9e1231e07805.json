{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// export const calculaterActionsTypes = {\n//   ADD: \"ADD\",\n//   SUBTRUCT: \"SUBTRUCT\",\n//   DIVIDE: \"DIVIDE\",\n//   MULTIPLY: \"MULTYPLY\",\n// };\nconst initialState = {\n  result: 0\n};\nexport const calculateSlice = createSlice({\n  name: \"calculate\",\n  initialState,\n  reducers: {\n    add(state, action) {\n      state.result += action.payload;\n    },\n    subtract(state, action) {\n      state.result -= action.payload;\n    }\n  }\n});\nexport const calculateActions = calculateSlice.actions;\nconsole.log(calculateActions);\n\n// export const calculateReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case calculaterActionsTypes.ADD:\n//       return {\n//         ...state,\n//         result: state.result + action.payload,\n//       };\n//     case calculaterActionsTypes.SUBTRUCT:\n//       return {\n//         ...state,\n//         result: state.result - action.payload,\n//       };\n//     case calculaterActionsTypes.DIVIDE:\n//       return {\n//         ...state,\n//         result: state.result * action.payload,\n//       };\n//     case calculaterActionsTypes.MULTIPLY:\n//       return {\n//         ...state,\n//         result: state.result / action.payload,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n//  store.subtribel=()=>{\n//     console.log();\n//  }","map":{"version":3,"names":["createSlice","initialState","result","calculateSlice","name","reducers","add","state","action","payload","subtract","calculateActions","actions","console","log"],"sources":["C:/Users/Asel/Desktop/Redux/01-starting-project/src/store/calculator/calculatorReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// export const calculaterActionsTypes = {\r\n//   ADD: \"ADD\",\r\n//   SUBTRUCT: \"SUBTRUCT\",\r\n//   DIVIDE: \"DIVIDE\",\r\n//   MULTIPLY: \"MULTYPLY\",\r\n// };\r\nconst initialState = {\r\n  result: 0,\r\n};\r\n\r\nexport const calculateSlice = createSlice({\r\n  name: \"calculate\",\r\n  initialState,\r\n  reducers: {\r\n    add(state, action) {\r\n      state.result += action.payload;\r\n    },\r\n    subtract(state, action) {\r\n      state.result -= action.payload;\r\n    },\r\n  },\r\n});\r\nexport const calculateActions = calculateSlice.actions;\r\nconsole.log(calculateActions);\r\n\r\n// export const calculateReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case calculaterActionsTypes.ADD:\r\n//       return {\r\n//         ...state,\r\n//         result: state.result + action.payload,\r\n//       };\r\n//     case calculaterActionsTypes.SUBTRUCT:\r\n//       return {\r\n//         ...state,\r\n//         result: state.result - action.payload,\r\n//       };\r\n//     case calculaterActionsTypes.DIVIDE:\r\n//       return {\r\n//         ...state,\r\n//         result: state.result * action.payload,\r\n//       };\r\n//     case calculaterActionsTypes.MULTIPLY:\r\n//       return {\r\n//         ...state,\r\n//         result: state.result / action.payload,\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n//  store.subtribel=()=>{\r\n//     console.log();\r\n//  }\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGH,WAAW,CAAC;EACxCI,IAAI,EAAE,WAAW;EACjBH,YAAY;EACZI,QAAQ,EAAE;IACRC,GAAG,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjBD,KAAK,CAACL,MAAM,IAAIM,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,QAAQ,CAACH,KAAK,EAAEC,MAAM,EAAE;MACtBD,KAAK,CAACL,MAAM,IAAIM,MAAM,CAACC,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAME,gBAAgB,GAAGR,cAAc,CAACS,OAAO;AACtDC,OAAO,CAACC,GAAG,CAACH,gBAAgB,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}